openapi: 3.0.0
info:
  title: API Authentication
  description: |
    All Debitsuccess REST API's uses the OAuth 2.0 protocol to authorize all 
    requests. OAuth is an open standard that many companies use to provide secure 
    access to protected resources. 

    Once you have signed up with Debitsuccess you will receive the following authentication
    details. 

    **client_id** - This will identitfy your application.\
    **client_secret** - Your API Secret. This Api secret carry many privileges, so be sure to keep it secure!\
    **scope** - The name of the Api that access token will be generated for. **Please Note** if scope is not provided by debitsuccess you can ignore this field in the request body.\
    **grant_type** - always use client_credentials

    In exchange for these credentials, the Debitsuccess authorization server issues access 
    tokens called bearer tokens that you use for authorization when you make REST API 
    requests. A bearer token enables you to complete actions on behalf of, and with the 
    approval of, the resource owner.

    To generate access token use the **/identity/connect/token** end point. If the request 
    is successful you will receive a access token. The access_token field in the response 
    contains a bearer token, indicated by the token_type of Bearer

    Include this bearer token in API requests in the Authorization header with the Bearer 
    authentication scheme.
    ## Test Envrionment
     [https://oc-test.debitsuccess.com/identity/connect/token](https://oc-test.debitsuccess.com/identity/connect/token) 
  contact:
    email: TestAPI.Support@debitsuccess.com
  version: v1.0
servers:
  - url: https://oc-test.debitsuccess.com/identity/connect/token
tags:
  - name: Token
    description: Generate access token
paths:
  /identity/connect/token:
    post:
      tags:
        - Token
      description: This endpoint generates an access token which can be used with any Debitsuccess API. The access token includes the expiry time in seconds. It is recommended that all consumers generate new token when previous token has expired. **Please Note** the request body must be provided as application/x-www-form-urlencoded content type.
      operationId: accesstoken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        '400':
          description: 'Bad Request - Request validation error, The response message will vary depending on the cause.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
components:
  schemas:
    inline_response_200:
      type: object
      properties:
        access_token:
          type: string
          description: JWT cess token that can be used for the API requested in the scope.
          example: eyJhbGciOiJSUzI1NiIsImtpZCI6IjRGMzhGRUYyODI5NzZGNzdFQkU3
        expires_in:
          type: string
          description: token expiry time. Default 1 hour.
          example: '3600'
        token_type:
          type: string
          example: Bearer
      example: {
      "access_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjRGMzhGRUYyODI5NzZGNzdFQkU3",
      "expires_in": "3600",
      "token_type": "Bearer"
       }
    body:
      required:
        - client_id
        - client_secret
        - grant_type
        - scope
      type: object
      properties:
        grant_type:
          type: string
          description: Always use client_credentials.
          example: client_credentials
        scope:
          type: string
          description: 'The name of the api which you intend to use the access token with. Note, if this scope value is not provided by debitsuccess you can ignore this field.'
          example: CasualPaymentApi
        client_id:
          type: string
          description: Client idenitifier generated by Debitsuccess.
          example: e283fd05-85a5-4aa8-9a4a-6c735c2a6d9f
        client_secret:
          type: string
          description: Client secret generated by Debitsuccess
          example: Y2Fa$rd#8QJLjCUMj%c5!pzof^a9JggV0YDfOUFbh%c0xAAXGG
    inline_response_400:
      type: object
      properties:
        error:
          type: string
          description: The error response can include any value that is discribed in the example.
          example: 'unsupported_grant_type,invalid_scope,invalid_client.'
      example: {
       "error": "unsupported_grant_type,invalid_scope,invalid_client."
      }  
  responses:
    Success:
      description: Successful Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200'
    Validation-Error:
      description: 'Bad Request - Request validation error, The response message will vary depending on the cause.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_400'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
